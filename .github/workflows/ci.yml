name: CI
on:
  push:
    branches: ["main", "feature/**", "bugfix/**"]
  pull_request:
    branches: ["main", "feature/**", "bugfix/**"]
    types: [opened, synchronize]
jobs:
  build:
    name: Build and Test
    timeout-minutes: 15
    runs-on: ubuntu-latest
    # To use Remote Caching, uncomment the next lines and follow the steps below.
    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    container: node:22-bookworm-slim

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Migrate payload
        run: pnpm payload:migrate
        env:
          DATABASE_URI: ${{ secrets.DATABASE_URI }}
          # DATABASE_URI: "postgres://postgres:postgres@postgres:5432/postgres"
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
          # The default PostgreSQL port
          # Hardcoded for testing, should be retrived from either the vault, or env secrets on github.
          # PAYLOAD_SECRET: "9da353614ecee0bfa86d9e6f"
      - name: Build
        run: pnpm build
        env:
          DATABASE_URI: ${{ secrets.DATABASE_URI }}
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}

      # - name: Test
      #   run: pnpm test
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: oven-sh/setup-bun@v2
  #       with:
  #         bun-version: latest
  #     - name: Install dependencies
  #       run: bun install
  #     - name: Build
  #       run: bun run build
  #     - name: Run unit tests
  #       run: bun run test
  #     - name: Install Playwright browsers
  #       run: bunx playwright install --with-deps
  #     - name: Run E2E tests
  #       run: bunx playwright test --config=apps/web/playwright.config.ts
  #     - name: Lint
  #       run: bun run lint
