# ...existing code...
name: CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main", "feature/**", "bugfix/**"]
    types: [opened, synchronize]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    timeout-minutes: 30
    runs-on: ubuntu-latest
    # To use Turbo Cloud remote caching (optional):
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    container: node:22-bookworm-slim

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Ensure pnpm store directory exists
        run: |
          mkdir -p ~/.pnpm-store
          mkdir -p ~/.local/share/pnpm
          # ensure proper ownership in container contexts
          chmod -R u+rwX ~/.pnpm-store ~/.local/share/pnpm

      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Restore .turbo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          # use lockfile-only key so cache can be reused across commits; restore-keys provide fallbacks
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-turbo-


      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --store ~/.pnpm-store

      - name: Run Payload migrations
        run: pnpm payload:migrate
        env:
          SKIP_ENV_VALIDATION: true
          DATABASE_URI: ${{ secrets.DATABASE_URI }}
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
          REDIS_AVAILABLE: "false"

      - name: Build
        # use turbo so remote cache (TURBO_TOKEN) and task graph are respected
        run: pnpm dlx turbo@latest run build --concurrency=50
        env:
          SKIP_ENV_VALIDATION: true
          DATABASE_URI: ${{ secrets.DATABASE_URI }}
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
          REDIS_AVAILABLE: "false"

      - name: Ensure .turbo exists
        run: |
          if [ ! -d .turbo ]; then
            mkdir -p .turbo
          fi

      - name: Save .turbo cache (post-build)
        if: success()
        uses: actions/cache@v4
        with:
          path: .turbo
          # use same lockfile-based key as the restore step (do NOT include github.sha)
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/pnpm-lock.yaml') }}