on:
  push:
    branches: ["main"]

permissions:
  contents: write
  pull-requests: write
  packages: write

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      web--tag_name: ${{ steps.release.outputs['apps/web--tag_name']}}
      web--version: ${{ steps.release.outputs['apps/web--version']}}
      web--release_created: ${{ steps.release.outputs['apps/web--release_created']}}
      web-path: ${{ steps.release.outputs['apps/web--path']}}
      paths_released: ${{ steps.release.outputs.paths_released}}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.TECK_WEBSITE_PAT }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - name: Print release outputs for debugging
        continue-on-error: true
        run: |
          echo "Release outputs:"
          echo "${{ toJson(steps.release.outputs) }}"
  release-web:
    if: ${{needs.release-please.outputs.web--release_created}}
    runs-on: ubuntu-latest
    needs: release-please

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/web
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release-please.outputs.web--version }}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=tag
            type=ref,event=branch
            type=ref,event=pr
            type=sha
      - id: string
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.REPOSITORY }}
      - name: Build and push container image to registry
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          # OCI compliant when set to false, should fix unknown/unknown arch
          provenance: false
          # push: ${{ github.event_name != 'pull_request' }}
          push: true
          pull: true
          context: .
          file: apps/web/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}/web:dockercache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}/web:dockercache,mode=max,image-manifest=true
          build-args: |
            "DATABASE_URI=postgres://postgres:postgres@localhost:5432/postgres"
            "PAYLOAD_SECRET=${{ secrets.PAYLOAD_SECRET }}"
