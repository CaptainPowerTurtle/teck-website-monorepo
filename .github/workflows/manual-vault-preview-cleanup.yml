name: Manual Vault Preview Cleanup

description: Manually delete all secrets and metadata under a specified preview namespace in Vault.

on:
  workflow_dispatch:
    inputs:
      namespace:
        description: 'Preview namespace to delete (e.g. preview-123)'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  manual-vault-preview-cleanup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Install Vault CLI
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install vault
      
      - name: Setup Vault with JWT
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: jwt
          role: github-actions
          exportToken: true

      - name: Delete Preview Secrets (Manual)
        run: |
          NAMESPACE="${{ github.event.inputs.namespace }}"
          echo "Cleaning up all preview secrets for: teck-website/data/${NAMESPACE}"
          echo "Using Vault server: ${VAULT_ADDR}"

          # Explicitly delete known keys under the namespace
          for key in redis postgres web; do
            echo "Explicitly deleting: teck-website/${NAMESPACE}/$key"
            vault kv get "teck-website/${NAMESPACE}/$key" || echo "No secret found at teck-website/${NAMESPACE}/$key"

            # Find all versions for the key
            versions=$(vault kv metadata get "teck-website/${NAMESPACE}/$key" 2>/dev/null | grep '^  version:' | awk '{print $2}')
            if [ -z "$versions" ]; then
              # Try to parse all available versions from the metadata output
              versions=$(vault kv metadata get "teck-website/${NAMESPACE}/$key" 2>/dev/null | grep -E '^[ ]+[0-9]+:' | awk -F: '{print $1}' | tr -d ' ' | tr '\n' ',')
              versions=${versions%,}
            fi
            if [ -n "$versions" ]; then
              echo "Destroying all versions: $versions"
              vault kv destroy "teck-website/${NAMESPACE}/$key" -versions="$versions" || true
            else
              echo "No versions found to destroy for teck-website/${NAMESPACE}/$key"
            fi

            vault kv metadata delete "teck-website/${NAMESPACE}/$key" || true
            vault kv get "teck-website/${NAMESPACE}/$key" || echo "No secret found at teck-website/${NAMESPACE}/$key"
          done

          # Delete the preview folder metadata itself
          echo "Deleting preview folder metadata: teck-website/${NAMESPACE}"
          vault kv metadata delete "teck-website/${NAMESPACE}" || true
          echo "Cleaned up entire preview folder: teck-website/${NAMESPACE}"
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}