name: Setup Preview Environment

on:
  pull_request:
    types: [labeled]
    branches:
      - main
      - feature/**
      - bugfix/**
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'deployment/**'

permissions:
  id-token: write
  contents: read

jobs:
  setup-preview-secrets:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'preview')
    
    steps:
      - name: Install Vault CLI
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install vault
      
      - name: Setup Vault with JWT
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: jwt
          role: github-actions
          exportToken: true

      - name: Create Default Preview Secrets
        run: |
          PR_NUMBER=${{ github.event.number }}
          NAMESPACE="preview-${PR_NUMBER}"
          
          echo "Setting up default secrets for preview environment: teck-website/${NAMESPACE}"
          echo "Using Vault server: ${VAULT_ADDR}"
          
          # Generate random secrets for preview environment
          RANDOM_PAYLOAD_SECRET=$(openssl rand -hex 32)
          RANDOM_PREVIEW_SECRET=$(openssl rand -hex 16)
          RANDOM_REDIS_PASSWORD=$(openssl rand -hex 24)
          
          # Create payload secrets with generated values
          vault kv put teck-website/${NAMESPACE}/web \
            secret="$RANDOM_PAYLOAD_SECRET" \
            preview-secret="$RANDOM_PREVIEW_SECRET"
          
          # Create redis secret with generated password
          vault kv put teck-website/${NAMESPACE}/redis \
            password="$RANDOM_REDIS_PASSWORD"
          
          echo "✅ Created default secrets for preview environment: teck-website/${NAMESPACE}"
          echo "   - Payload secrets: ✅"
          echo "   - Redis secret: ✅"
          echo "   - Postgres secrets will be generated by CloudNativePG operator"
          echo "Preview environment is ready to deploy!"
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
